name: Checks

on:
  pull_request:
  push:
    branches: ["main"]

jobs:
  typos:
    runs-on: ubuntu-latest
    name: check misspelling by typos
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - name: Run typos command
        shell: nix shell nixpkgs#typos --quiet --command bash {0}
        run: typos --hidden --exclude .git --format brief

  tflint:
    runs-on: ubuntu-latest
    name: lint opentofu code by tflint
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - name: Run tflint command
        shell: nix shell nixpkgs#tflint --quiet --command bash {0}
        run: tflint --chdir ./infra --recursive

  tofu:
    runs-on: ubuntu-latest
    name: tofu init and validate
    defaults:
      run:
        working-directory: ./infra # Set working directory for apply job.
    steps:
      - uses: actions/checkout@v5
      - uses: opentofu/setup-opentofu@v1
      - name: Run OpenTofu commands
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
        run: |
          tofu init
          tofu validate

  trivy-fs:
    name: use trivy to scan files
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v5
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: fs
          severity: CRITICAL,HIGH,MEDIUM
          skip-dirs: ./target
          output: trivy-results.sarif
          format: sarif
          hide-progress: true
          ignore-unfixed: true
          exit-code: 1
      - name: Upload Trivy scan results to GitHub Security tab
        if: ${{ success() || failure() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
          category: trivy-fs-scan

  trivy-config:
    name: use trivy to scan configs
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v5
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: config
          severity: CRITICAL,HIGH,MEDIUM
          output: trivy-results.sarif
          format: sarif
          hide-progress: true
          ignore-unfixed: true
          exit-code: 1
      - name: Upload Trivy scan results to GitHub Security tab
        if: ${{ success() || failure() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
          category: trivy-config-scan
